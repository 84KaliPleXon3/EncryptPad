#!/bin/sh
set -e
USAGE="epd_encryption_test.sh <path_to_encryptcli> <tested_file>"
if [ $# -lt 2 ]
then
    echo $USAGE
    exit 1
fi

ENCRYPT_CLI="$1"
FILE="$2"
TMP_DIR="./tmp"
PASSPHRASE_FILE="passphrase.txt"
KEY_FILE="x2_key/test_x2_key.key"

mkdir -p $TMP_DIR

RESULT=0

############
# Password only
############
echo "Password only"

$ENCRYPT_CLI -e -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.gpg $FILE
if ! [ -r $TMP_DIR/out_file.gpg ]
then
    echo encrypted file does not exist
    exit -1;
fi
gpg -d --no-use-agent --passphrase-file $PASSPHRASE_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.gpg

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.gpg
rm $TMP_DIR/out_file.txt

############
# Key only
############
echo "Key only"

$ENCRYPT_CLI -e -n -k $KEY_FILE -o $TMP_DIR/out_file.epd $FILE
$ENCRYPT_CLI -d -n -k $KEY_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.epd

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.epd
rm $TMP_DIR/out_file.txt

############
# Key only when encrypting a .gpg file
############
echo "Key only when encrypting a .gpg file"
$ENCRYPT_CLI -e -n -k $KEY_FILE -o $TMP_DIR/out_file.gpg $FILE
gpg -d --no-use-agent --passphrase-file $KEY_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.gpg

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.gpg
rm $TMP_DIR/out_file.txt

############
# Key only when decrypting a .gpg file
############
echo "Key only when decrytping a .gpg file"
$ENCRYPT_CLI -e -n -k $KEY_FILE -o $TMP_DIR/out_file.gpg $FILE
$ENCRYPT_CLI -d -n -k $KEY_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.gpg

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.gpg
rm $TMP_DIR/out_file.txt

############
# Key only (persisted)
############
echo "Key only (persisted)"

$ENCRYPT_CLI -e -n -s -k $KEY_FILE -o $TMP_DIR/out_file.epd $FILE
$ENCRYPT_CLI -d -n -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.epd

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.epd
rm $TMP_DIR/out_file.txt

############
# Key and password
############
echo "Key and password"

$ENCRYPT_CLI -e -k $KEY_FILE -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.epd $FILE
$ENCRYPT_CLI -d -k $KEY_FILE -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.epd

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.epd
rm $TMP_DIR/out_file.txt

############
# Key (persisted) and password
############
echo "Key (persisted) and password"

$ENCRYPT_CLI -e -s -k $KEY_FILE -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.epd $FILE
$ENCRYPT_CLI -d -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.epd

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi
rm $TMP_DIR/out_file.epd
rm $TMP_DIR/out_file.txt

############
# Encrypted key file generated by EncryptPad and decrypted by GPG
############
echo "Encrypted key file generated by EncryptPad and decrypted by GPG"

$ENCRYPT_CLI --generate_kf --encrypt_kf --kf_passphrase_file $PASSPHRASE_FILE $TMP_DIR/encrypted_key.key
gpg -d --no-use-agent --passphrase-file $PASSPHRASE_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/encrypted_key.key

if [ "$?" = "0" ]
then
    echo OK
fi

rm $TMP_DIR/encrypted_key.key
rm $TMP_DIR/out_file.txt

############
# EncryptPad encrypts with an encrypted key file
############
echo "EncryptPad encrypts with an encrypted key file"

$ENCRYPT_CLI --generate_kf --encrypt_kf --kf_passphrase_file $PASSPHRASE_FILE $TMP_DIR/encrypted_key.key
$ENCRYPT_CLI -e -n --kf_passphrase_file $PASSPHRASE_FILE -k $TMP_DIR/encrypted_key.key -o $TMP_DIR/out_file.gpg $FILE

gpg -d --no-use-agent --passphrase-file $PASSPHRASE_FILE -o $TMP_DIR/unencrypted_key.key $TMP_DIR/encrypted_key.key
gpg -d --no-use-agent --passphrase-file $TMP_DIR/unencrypted_key.key -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.gpg

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi

$ENCRYPT_CLI -d -n --kf_passphrase_file $PASSPHRASE_FILE -k $TMP_DIR/encrypted_key.key -o $TMP_DIR/epad_out_file.txt $TMP_DIR/out_file.gpg

if diff $FILE $TMP_DIR/epad_out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi

rm $TMP_DIR/encrypted_key.key
rm $TMP_DIR/out_file.gpg
rm $TMP_DIR/unencrypted_key.key
rm $TMP_DIR/out_file.txt
rm $TMP_DIR/epad_out_file.txt

###########
# EncryptPad encrypts and decrypts with an encrypted key in double protection mode
###########
echo "EncryptPad encrypts and decrypts with an encrypted key in double protection mode"

$ENCRYPT_CLI --generate_kf --encrypt_kf --kf_passphrase_file $PASSPHRASE_FILE $TMP_DIR/encrypted_key.key

$ENCRYPT_CLI -e -k $TMP_DIR/encrypted_key.key --kf_passphrase_file $PASSPHRASE_FILE -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.epd $FILE
$ENCRYPT_CLI -d -k $TMP_DIR/encrypted_key.key --kf_passphrase_file $PASSPHRASE_FILE -p $PASSPHRASE_FILE -o $TMP_DIR/out_file.txt $TMP_DIR/out_file.epd

if diff $FILE $TMP_DIR/out_file.txt
then
    echo OK
else
    RESULT=1
    echo FAIL
fi

rm $TMP_DIR/out_file.epd
rm $TMP_DIR/out_file.txt
rm $TMP_DIR/encrypted_key.key

###########
# Conclusion
###########

exit $RESULT
